[tool.poetry]
authors = ["Tiago Requeijo <tiago.requeijo.dev@gmail.com>"]
description = "A library to load configuration parameters from multiple sources and formats"
homepage = "https://github.com/tr11/python-configuration"
include = ["config/py.typed"]
keywords = ['configuration', 'settings', 'json', 'yaml', 'toml', 'ini']
license = "MIT"
name = "python-configuration"
packages = [{ include = "config" }]
readme = 'README.md'
repository = "https://github.com/tr11/python-configuration"
version = "0.9.1"

[tool.poetry.dependencies]
python = "^3.8.1"
azure-identity = { version = "^1.13.0", optional = true }
azure-keyvault = { version = "^4.2.0", optional = true }
boto3 = { version = "^1.28.20", optional = true }
google-cloud-secret-manager = { version = "^2.16.3", optional = true }
hvac = { version = "^1.1.1", optional = true }
pyyaml = { version = "^6.0", optional = true }
jsonschema = { version = "^4.18.6", optional = true }
tomli = { version = "^2.0.1", optional = true }

[tool.poetry.group.dev.dependencies]
mypy = "^1.4.1"
pydocstyle = "^6.0"
pytest = "^7.4.0"
pytest-black = "^0.3.12"
pytest-cov = "^4.1.0"
pytest-mypy = "^0.10.3"
pytest-mock = "^3.5.0"
sphinx = "^7.1.2"
sphinx-autodoc-typehints = "^1.24.0"
black = "^23.7.0"
ruff = "^0.0.284"
pytest-ruff = "^0.2.1"

[tool.poetry.extras]
aws = ["boto3"]
azure = ["azure-keyvault", "azure-identity"]
gcp = ["google-cloud-secret-manager"]
toml = ["tomli"]
vault = ["hvac"]
yaml = ["pyyaml"]
validation = ["jsonschema"]

[tool.ruff]
line-length = 88
select = [
    'F',
    'E',
    'W',
    'I',
    'N',
    'D',
    'B',
    'A',
    'COM',
    'C4',
    'T20',
    'Q',
    'SIM',
]
exclude = ["tests", "docs"]


[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true
envlist = py38, py39, py310, py311, py312

[testenv]
allowlist_externals = poetry
commands =
    poetry install -v --all-extras
    poetry run pytest
"""

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_subclassing_any = true
disallow_any_decorated = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
exclude = ['tests']

[[tool.mypy.overrides]]
module = [
    'google.auth.credentials',
    'yaml',
    'toml',
    'boto3',
    'botocore.exceptions',
    'hvac',
    'hvac.exceptions',
    'jsonschema',
    'jsonschema.exceptions',
]
ignore_missing_imports = true

[tool.coverage.run]
branch = true
include = ['config/*']

[tool.coverage.html]
directory = 'cover'

[tool.pytest.ini_options]
minversion = "6.0"
addopts = '--cov --cov-report=html --cov-report term-missing --ruff --mypy --black'
filterwarnings = [
    'ignore::pytest.PytestDeprecationWarning',
    'ignore::DeprecationWarning',
    'ignore::pytest.PytestWarning',
]

[build-system]
build-backend = "poetry.masonry.api"
requires = ["poetry>=1.5.0"]
